kInclude(include)
kLt(<)
kId(cstdlib)
kGt(>)
kInclude(include)
kLt(<)
kId(iostream)
kGt(>)
kInclude(include)
kString(absl/strings/str_format.h)
kInclude(include)
kString(bcf/logging.h)
kInclude(include)
kString(main/compilation.h)
kFn(fn)
kId(main)
kLParen(()
kId(argc)
kColon(:)
kId(int)
kComma(,)
kId(argv)
kColon(:)
kStar(*)
kStar(*)
kId(char)
kRParen())
kArrow(->)
kId(int)
kLBrace({)
kIf(if)
kLParen(()
kId(argc)
kLt(<)
kIntLit(2)
kRParen())
kLBrace({)
kId(std)
kColon(:)
kColon(:)
kId(cout)
kLt(<)
kLt(<)
kId(absl)
kColon(:)
kColon(:)
kId(StrFormat)
kLParen(()
kString(Usage: %s file_name\n)
kComma(,)
kId(argv)
kLBrack([)
kIntLit(0)
kRBrack(])
kRParen())
kSemi(;)
kReturn(return)
kId(EXIT_FAILURE)
kSemi(;)
kRBrace(})
kId(Compilation)
kId(compilation)
kLParen(()
kId(argv)
kLBrack([)
kIntLit(1)
kRBrack(])
kRParen())
kSemi(;)
kMut(mut)
kId(result)
kAssign(=)
kId(compilation)
kDot(.)
kId(Run)
kLParen(()
kRParen())
kSemi(;)
kIf(if)
kLParen(()
kLogicNot(!)
kId(result)
kDot(.)
kId(ok)
kLParen(()
kRParen())
kRParen())
kLBrace({)
kId(std)
kColon(:)
kColon(:)
kId(cerr)
kLt(<)
kLt(<)
kId(result)
kDot(.)
kId(err)
kLParen(()
kRParen())
kLt(<)
kLt(<)
kString(\n)
kSemi(;)
kRBrace(})
kReturn(return)
kId(EXIT_SUCCESS)
kSemi(;)
kRBrace(})
